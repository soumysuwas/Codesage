@echo off
REM CodeSage AI Technical Interviewer - Windows Installation Script
REM This script automatically installs all dependencies and sets up the system

echo.
echo üöÄ CodeSage AI Technical Interviewer - Installation Script
echo ==========================================================
echo.

REM Check if Python is installed
echo ‚ÑπÔ∏è  Checking Python installation...
python --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Python not found
    echo ‚ÑπÔ∏è  Please install Python 3.11+ from https://www.python.org/downloads/
    echo ‚ÑπÔ∏è  Make sure to check "Add Python to PATH" during installation
    pause
    exit /b 1
) else (
    echo ‚úÖ Python found
)

REM Check if Node.js is installed
echo ‚ÑπÔ∏è  Checking Node.js installation...
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js not found
    echo ‚ÑπÔ∏è  Please install Node.js 18+ from https://nodejs.org/
    pause
    exit /b 1
) else (
    echo ‚úÖ Node.js found
)

REM Check if npm is installed
echo ‚ÑπÔ∏è  Checking npm installation...
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå npm not found
    echo ‚ÑπÔ∏è  Please install npm (usually comes with Node.js)
    pause
    exit /b 1
) else (
    echo ‚úÖ npm found
)

echo.
echo ‚ÑπÔ∏è  Setting up Python backend...

REM Navigate to backend directory
cd backend

REM Create virtual environment
echo ‚ÑπÔ∏è  Creating Python virtual environment...
python -m venv venv
if %errorlevel% neq 0 (
    echo ‚ùå Failed to create virtual environment
    pause
    exit /b 1
)

REM Activate virtual environment
echo ‚ÑπÔ∏è  Activating virtual environment...
call venv\Scripts\activate.bat

REM Upgrade pip
echo ‚ÑπÔ∏è  Upgrading pip...
python -m pip install --upgrade pip

REM Install Python dependencies
echo ‚ÑπÔ∏è  Installing Python dependencies...
pip install -r requirements.txt
if %errorlevel% neq 0 (
    echo ‚ùå Failed to install Python dependencies
    pause
    exit /b 1
)

REM Create .env file if it doesn't exist
if not exist .env (
    echo ‚ÑπÔ∏è  Creating environment configuration...
    (
        echo # Gemini API Configuration (REQUIRED^)
        echo GEMINI_API_KEY=your_gemini_api_key_here
        echo.
        echo # Server Configuration
        echo HOST=0.0.0.0
        echo PORT=8000
        echo DEBUG=True
        echo.
        echo # CORS Configuration
        echo CORS_ORIGINS=http://localhost:3000
        echo.
        echo # Security
        echo SECRET_KEY=your-secret-key-change-this
        echo.
        echo # Code Execution
        echo CODE_TIMEOUT=5
        echo MAX_MEMORY_MB=128
        echo.
        echo # Interview Configuration
        echo MAX_QUESTIONS=5
        echo INTERVIEW_DURATION_MINUTES=60
    ) > .env
    echo ‚úÖ Environment file created at backend\.env
) else (
    echo ‚úÖ Environment file already exists
)

REM Go back to root directory
cd ..

echo.
echo ‚ÑπÔ∏è  Setting up Node.js frontend...

REM Navigate to frontend directory
cd frontend

REM Install Node.js dependencies
echo ‚ÑπÔ∏è  Installing Node.js dependencies...
npm install
if %errorlevel% neq 0 (
    echo ‚ùå Failed to install Node.js dependencies
    pause
    exit /b 1
)

REM Go back to root directory
cd ..

echo.
echo ‚ÑπÔ∏è  Creating start script...

REM Create start.bat file
(
    echo @echo off
    echo REM CodeSage AI Technical Interviewer - Start Script
    echo echo üöÄ Starting CodeSage AI Technical Interviewer...
    echo.
    echo REM Check if .env exists
    echo if not exist backend\.env ^(
    echo     echo ‚ùå Environment file not found. Please run install.bat first
    echo     pause
    echo     exit /b 1
    echo ^)
    echo.
    echo REM Start backend in background
    echo echo Starting backend server...
    echo cd backend
    echo call venv\Scripts\activate.bat
    echo start /B python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    echo.
    echo REM Wait for backend to start
    echo timeout /t 3 /nobreak ^>nul
    echo.
    echo REM Start frontend
    echo echo Starting frontend server...
    echo cd ..\frontend
    echo start /B npm run dev
    echo.
    echo echo.
    echo echo üéâ CodeSage is running!
    echo echo Frontend: http://localhost:3000
    echo echo Backend: http://localhost:8000
    echo echo API Docs: http://localhost:8000/docs
    echo echo.
    echo echo Press any key to stop both servers
    echo pause ^>nul
    echo.
    echo REM Stop all Python and Node processes
    echo taskkill /f /im python.exe ^>nul 2^>^&1
    echo taskkill /f /im node.exe ^>nul 2^>^&1
    echo echo üõë Servers stopped
) > start.bat

echo ‚úÖ Start script created

echo.
echo ==========================================================
echo ‚úÖ Installation complete!
echo.
echo ‚ÑπÔ∏è  Next steps:
echo 1. Add your Gemini API key to backend\.env
echo 2. Run: start.bat
echo 3. Open http://localhost:3000 in your browser
echo.
echo ‚ö†Ô∏è  Important: You need a Gemini API key for AI features to work
echo ‚ÑπÔ∏è  Get your API key from: https://makersuite.google.com/app/apikey
echo.
echo ‚ÑπÔ∏è  For detailed instructions, see USER_GUIDE.md
echo ==========================================================
echo.
pause
